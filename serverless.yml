# Welcome to serverless. Read the docs
# https://serverless.com/framework/docs/

# Serverless.yml is the configuration the CLI
# uses to deploy your code to your provider of choice

# The `service` block will be the name of the service
# This helps you identify it on AWS
service: hackCU

# Configuration variables
custom:
  CATS_TABLE: faasCats
  API_KEY: ${file(env.yml):API_KEY}

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs6.10
  # Profile is your AWS profile specified in ~/.aws/config
  profile: hackCU
  region: us-east-1
  environment:
    CATS_TABLE: ${self:custom.CATS_TABLE}
    API_KEY: ${self:custom.API_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - s3:*
      Resource: "*"
      
package:
  individually: true
  exclude:
    - ./**
  include:
    - ./node_modules/**
    - ./lib/**

# The `functions` block defines what code to deploy
functions:
  # Create a cat :D
  create:
    handler: api/create.handler
    package:
      include:
        - api/create.js
    events:
      - http:
          path: cat/
          method: post
  # Update a cat by ID
  update:
    handler: api/update.handler
    package:
      include:
        - api/update.js
    events:
      - http:
          path: cat/
          method: put
  # Delete a cat by ID D:
  delete:
    handler: api/delete.handler
    package:
      include:
        - api/delete.js
    events:
      - http:
          path: cat/
          method: delete
  # Search for a cat by name
  search:
    handler: api/search.handler
    package:
      include:
        - api/search.js
    events:
      - http:
          path: search/{name}
          method: get

resources:
  Resources:
    Cats:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.CATS_TABLE}
        AttributeDefinitions:
          - AttributeName: searchName
            AttributeType: S
          - AttributeName: type
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: type
            KeyType: HASH
          - AttributeName: searchName
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: id-index
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1